# Make multiple PRs (each PR updates a single manifest file)

name: Multiple PRs
on:
  push:
    branches:
      - main
  workflow_dispatch:
defaults:
  run:
    shell: bash
concurrency:
  # Skip intermediate builds: all builds except for builds on the `main` branch
  # Cancel intermediate builds: only pull request builds
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.ref != 'refs/heads/main' || github.run_number }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  multiple_prs:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6' # old LTS
          - '1.7'
          - '1.8'
          - '1.9'
          - '1.10' # current LTS
          - '1.11'
          # - '1.12'
          # - '1.13'
          - 'nightly'
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: x64
      - run: println("::set-output name=manifest_version::$(VERSION.major).$(VERSION.minor)")
        shell: julia --color=yes {0}
        id: manifest_version
      - run: echo "We will update the manifest at Manifest.${{ steps.manifest_version.outputs.manifest_version }}.toml"
      - run: rm -rf Manifest.toml
      - run: |
          if [ -f "Manifest.${{ steps.manifest_version.outputs.manifest_version }}.toml" ]; then
              echo "The manifest file exists, so I will update the existing manifest."
              mv Manifest.${{ steps.manifest_version.outputs.manifest_version }}.toml Manifest.toml
          else
              echo "The manifest file does not exist, so I will create a new manifest from scratch."
          fi
      - name: Cache artifacts
        uses: actions/cache@v4
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Manifest.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - run: julia --color=yes -e 'import Pkg; Pkg.Registry.add("General")'
        env:
          JULIA_PKG_SERVER: ""
      - run: julia --color=yes -e 'import Pkg; Pkg.Registry.update()'
      - run: julia --color=yes --project=@. -e 'import Pkg; Pkg.instantiate'
      - run: julia --color=yes --project=@. -e 'import Pkg; Pkg.update()'
      - run: mv Manifest.toml Manifest.${{ steps.manifest_version.outputs.manifest_version }}.toml
      - run: rm -rf Manifest.toml
      - run: chmod 600 Project.toml
      - run: chmod 600 Manifest.*.toml
      - run: git status
      - uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          delete-branch: true
          branch: 'update_manifests/multiple_prs/manifest_v${{ steps.manifest_version.outputs.manifest_version }}/from_matrix_${{ matrix.version }}'
          commit-message: 'ðŸ¤– Update the manifest file at `Manifest.${{ steps.manifest_version.outputs.manifest_version }}.toml`'
          title: 'ðŸ¤– Update the manifest file at `Manifest.${{ steps.manifest_version.outputs.manifest_version }}.toml`'
          body: ''
