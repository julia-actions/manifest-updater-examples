name: Example of Using Manifest
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  # schedule:
  #   - cron: 0 0 * * 1
  workflow_dispatch:
defaults:
  run:
    shell: bash
jobs:
  example:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1'
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - run: println("::set-output name=manifest_version::$(VERSION.major).$(VERSION.minor)")
        shell: julia --color=yes {0}
        id: manifest_version
      - run: echo "The manifest is Manifest.${{ steps.manifest_version.outputs.manifest_version }}.toml"
      - run: rm -rf Manifest.toml
      - run: |
          if [ -f Manifest.${{ steps.manifest_version.outputs.manifest_version }}.toml ]; then
            mv Manifest.${{ steps.manifest_version.outputs.manifest_version }}.toml Manifest.toml
          fi
      - run: |
          if [ -f Manifest.toml ]; then
            chmod 400 Project.toml
          fi
      - run: |
          if [ -f Manifest.toml ]; then
            chmod 400 Manifest.toml
          fi
      - name: Cache artifacts
        uses: actions/cache@v2
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Manifest.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - run: julia --color=yes -e 'import Pkg; Pkg.Registry.add("General")'
        env:
          JULIA_PKG_SERVER: ""
      - run: julia --color=yes -e 'import Pkg; Pkg.Registry.update()'
      - run: julia --color=yes --project=@. -e 'import Pkg; Pkg.instantiate()'
      - run: julia --color=yes --project=@. -e 'import Pkg; Pkg.precompile()'
      - run: julia --color=yes --project=@. bin/example.jl
